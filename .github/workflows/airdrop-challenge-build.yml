name: "Airdrop-Chanllenge-Build"
on:
  workflow_dispatch:
    inputs:
      isLatest:
        description: "Add latest tag"
        default: "false"

jobs:
  node-build-push-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          # token: ${{ secrets.REPO_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: subquerynetwork
          password: ${{ secrets.SQ_DOCKERHUB_TOKEN }}

      - name: Get version from git commit hash
        id: get-version
        run: |
          echo ::set-output name=VERSION::$(git rev-parse --short HEAD | cut -c -7)

      - name: Build and push
        if: github.event.inputs.isLatest == 'false'
        uses: docker/build-push-action@v2
        with:
          context: ./airdrop-challenge
          push: true
          platforms: amd64
          # file: ./Dockerfile
          tags: subquerynetwork/airdrop-challenge-backend:${{ steps.get-version.outputs.VERSION }}
          build-args: RELEASE_VERSION=${{ steps.get-version.outputs.VERSION }}

      - name: Build and push
        if: github.event.inputs.isLatest == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./airdrop-challenge
          push: true
          platforms: amd64
          # file: ./Dockerfile
          tags: subquerynetwork/airdrop-challenge-backend:${{ steps.get-version.outputs.VERSION }},subquerynetwork/airdrop-challenge-backend:latest
          build-args: RELEASE_VERSION=${{ steps.get-version.outputs.VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
